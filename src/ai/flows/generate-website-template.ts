
// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Generates a website template with suggested styles, color schemes, and layouts based on the user's business type.
 *
 * - generateWebsiteTemplate - A function that generates a website template.
 * - GenerateWebsiteTemplateInput - The input type for the generateWebsiteTemplate function.
 * - GenerateWebsiteTemplateOutput - The return type for the generateWebsiteTemplate function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateWebsiteTemplateInputSchema = z.object({
  businessType: z.string().describe('The type of business for which to generate a website template.'),
  mediaLibraryUrls: z.array(z.string()).optional().describe('An optional array of public URLs for images from the user\'s media library to be incorporated into the website.'),
});
export type GenerateWebsiteTemplateInput = z.infer<typeof GenerateWebsiteTemplateInputSchema>;

const GenerateWebsiteTemplateOutputSchema = z.object({
  htmlContent: z
    .string()
    .describe(
      'A complete, self-contained HTML document string that includes CSS within a <style> tag. The HTML should represent a visually appealing website template. Use placeholder images from https://placehold.co where appropriate.'
    ),
  suggestedLayout: z.string().describe('A brief description of the layout used in the template.'),
  suggestedColorScheme: z.string().describe('A brief description of the color scheme used.'),
});
export type GenerateWebsiteTemplateOutput = z.infer<typeof GenerateWebsiteTemplateOutputSchema>;

export async function generateWebsiteTemplate(input: GenerateWebsiteTemplateInput): Promise<GenerateWebsiteTemplateOutput> {
  return generateWebsiteTemplateFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateWebsiteTemplatePrompt',
  input: {schema: GenerateWebsiteTemplateInputSchema},
  output: {schema: GenerateWebsiteTemplateOutputSchema},
  prompt: `You are an expert AI web developer and designer, a master of creating visually stunning, pixel-perfect websites that are indistinguishable from award-winning human-made designs. Your task is to generate a complete, single-page HTML website template based on the user's \`businessType\`.

**CRITICAL INSTRUCTION: PERSONA MATCHING & PIXEL-PERFECT EXECUTION**
The provided \`businessType\` input (e.g., 'Modern Tech Startup', 'Cozy Coffee Shop') will **exactly match** the title of one of the Design Personas listed below. You **MUST** identify the matching persona and follow its detailed design system with absolute precision. This is not a creative task; it is a technical execution of a pre-defined, high-quality design blueprint. The output must be a perfect, world-class implementation.

**MANDATORY TECHNICAL REQUIREMENTS FOR ALL PERSONAS:**
- **Self-Contained HTML:** The entire output must be a single HTML file. All CSS must be inside a \`<style>\` tag in the \`<head>\`, and all JavaScript must be inside a \`<script>\` tag before the closing \`</body>\`.
- **Google Fonts Import:** You MUST include the correct \`@import\` rule for the specified Google Fonts at the top of your \`<style>\` tag.
- **Responsive Design:** The design MUST be fully responsive using \`@media\` queries as specified in the persona.
- **Smooth Scroll:** The JavaScript snippet for smooth scrolling MUST be included.
- **No Placeholder Content:** All text (headings, paragraphs) MUST be realistic, engaging, and relevant to the business type. No "Lorem Ipsum".
- **Image Usage Rules:**
  - **Priority:** If the user provides a list of images in \`mediaLibraryUrls\`, you MUST prioritize using these images in the generated HTML. Use them for key elements like the hero image, author photo, or embedded content images. You can access them using their direct URL, for example: \`src="{{{mediaLibraryUrls.[0]}}}"\`.
  - **Fallback:** If no images are provided, or if you need more images than what the user provided, you MUST use the AI image generation format: \`src="image-prompt:A descriptive prompt for a high-quality, relevant image"\`. For example: \`src="image-prompt:a professional photograph of a sun-drenched minimalist writing desk with a steaming coffee cup"\`. The prompts must be descriptive and match the persona's aesthetic.
- **Functional Navigation:** The header must contain navigation links (e.g., "About", "Services", "Contact"). Each link MUST have an \`href\` attribute pointing to a section ID (e.g., \`href="#about"\`). You MUST ensure a corresponding element exists with a matching \`id\` (e.g., \`<section id="about">...\`). The following JavaScript snippet for smooth scrolling MUST be included right before the closing \`</body>\` tag:
  \`\`\`html
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll("a[href^='#']").forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const targetId = this.getAttribute('href');
          const targetElement = document.querySelector(targetId);
          if (targetElement) {
            targetElement.scrollIntoView({ behavior: 'smooth' });
          }
        });
      });
    });
  <\/script>
  \`\`\`

---

**DESIGN PERSONA BLUEPRINTS:**

*   **Persona Title: Modern Tech Startup**
    *   **Core Idea:** Dark, futuristic, professional, and sleek.
    *   **Fonts:** \`Space Grotesk\` for headings, \`Inter\` for body. You MUST import them: \`@import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@500;700&family=Inter:wght@400;500&display=swap');\`
    *   **Colors:** Background: \`#111827\`. Text: \`#F9FAFB\`. Primary Accent: \`#3b82f6\` (Electric Blue). Muted Text/Borders: \`#374151\`.
    *   **Base Styles:** \`body { font-family: 'Inter', sans-serif; background-color: #111827; color: #F9FAFB; line-height: 1.6; } h1, h2, h3 { font-family: 'Space Grotesk', sans-serif; font-weight: 700; } section { padding: 80px 2rem; }\`
    *   **Buttons:** Style MUST be \`background-color: #3b82f6; color: #F9FAFB; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 500; transition: all 0.3s ease; box-shadow: 0 4px 14px 0 rgba(59, 130, 246, 0.3); border: none;\` On hover, it MUST change to \`background-color: #60a5fa; transform: translateY(-2px); box-shadow: 0 6px 20px 0 rgba(59, 130, 246, 0.4);\`
    *   **Layout:** Main container MUST have \`max-width: 1200px; margin: 0 auto;\`.
    *   **Hero Section:** MUST be \`min-height: 80vh;\` with a large \`h1\` (\`font-size: clamp(2.5rem, 5vw, 4rem);\`).
    *   **Features Section:** MUST be a 3-column grid. Each feature MUST be in a card with \`background-color: #1f2937; border: 1px solid #374151; border-radius: 12px; padding: 24px;\`.

*   **Persona Title: Cozy Coffee Shop**
    *   **Core Idea:** Warm, inviting, rustic yet modern, high-quality feel.
    *   **Fonts:** \`Playfair Display\` for headings, \`Inter\` for body. You MUST import them: \`@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&family=Inter:wght@400;500&display=swap');\`
    *   **Colors:** Background: \`#fef9f3\`. Text: \`#4a3f35\`. Primary Accent: \`#e4a757\`.
    *   **Base Styles:** \`body { font-family: 'Inter', sans-serif; background-color: #fef9f3; color: #4a3f35; } h1, h2, h3 { font-family: 'Playfair Display', serif; } section { padding: 80px 2rem; }\`
    *   **Hero Section:** MUST use a full-width background image. Over this image, there MUST be a semi-transparent, centered content box with \`background-color: rgba(40, 30, 25, 0.7); color: #fef9f3; padding: 40px; border-radius: 8px; text-align: center; max-width: 600px; margin: auto;\`.
    *   **Menu Section:** MUST be a clean 2-column grid. Each menu item should have a dotted leader between the name and the price for a classic menu feel (e.g., using a flexbox with a dotted border element that fills the space).
    *   **Cards/Sections:** MUST use a subtle shadow: \`box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\` and \`border-radius: 12px;\`.

*   **Persona Title: Minimalist Portfolio**
    *   **Core Idea:** Ultra-clean, content-first, spacious, and elegant.
    *   **Fonts:** \`Inter\` for all text. You MUST import it: \`@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500&display=swap');\`
    *   **Colors:** Background: \`#ffffff\`. Text: \`#111111\`. Muted Text/Borders: \`#E5E7EB\`.
    *   **Base Styles:** \`body { font-family: 'Inter', sans-serif; background-color: #ffffff; color: #111111; } h1, h2, h3 { font-weight: 400; letter-spacing: -0.02em; } section { padding: 100px 2rem; }\`
    *   **Layout:** White space is the most important design element. The main container MUST have generous horizontal padding (e.g., \`padding: 0 4rem;\`).
    *   **Portfolio Grid:** MUST use CSS Grid with a significant gap (e.g., \`gap: 40px;\`). Each grid item MUST have a subtle hover effect: \`img { transition: transform 0.4s ease; } .item:hover img { transform: scale(1.03); }\`. There should be no borders or shadows on the grid items themselves, only the image.

*   **Persona Title: Vibrant Digital Agency**
    *   **Core Idea:** Energetic, bold, creative, using gradients and modern layouts.
    *   **Fonts:** \`Poppins\` for headings, \`Inter\` for body. You MUST import them: \`@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@700&family=Inter:wght@400&display=swap');\`
    *   **Colors:** The body background MUST have a specific linear gradient: \`background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\`. Text MUST be white \`#ffffff\`.
    *   **Buttons:** MUST be a solid, contrasting vibrant color (e.g., a bright pink \`#EC4899\`). The hover effect MUST be pronounced, e.g., \`transform: scale(1.05) translateY(-2px); box-shadow: 0 10px 20px rgba(0,0,0,0.2);\`.
    *   **Cards/Sections:** MUST use the "glassmorphism" effect: \`background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(10px); border-radius: 16px; border: 1px solid rgba(255, 255, 255, 0.2);\`.

*   **Persona Title: Personal Finance Blog**
    *   **Core Idea:** Trustworthy, clean, professional, and highly readable.
    *   **Fonts:** \`Inter\` for headings, \`Lora\` for body text. You MUST import them: \`@import url('https://fonts.googleapis.com/css2?family=Lora:wght@400;500&family=Inter:wght@600&display=swap');\`
    *   **Colors:** Background: \`#f8f9fa\`. Text: \`#343a40\`. Primary Link/Button color: \`#007bff\`.
    *   **Layout:** A traditional blog layout with a main content area and a sidebar. The main content MUST have \`max-width: 720px;\`.
    *   **Typography:** The body text (\`font-family: 'Lora', serif;\`) MUST have a comfortable \`line-height: 1.8;\` for long-form reading. Paragraphs must have \`margin-bottom: 1.25rem;\`.
    *   **Article Styling:** \`h2\` and \`h3\` within articles MUST have clear spacing: \`margin-top: 2em; margin-bottom: 0.75em;\`.

*   **Persona Title: Travel Influencer Blog**
    *   **Core Idea:** Immersive, visual, adventurous, magazine-like.
    *   **Fonts:** \`Playfair Display\` for headings, \`Inter\` for body. You MUST import them: \`@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&family=Inter:wght@400&display=swap');\`
    *   **Colors:** Palette MUST be clean and neutral (Background: \`#ffffff\`, Text: \`#222222\`) to ensure photography is the main focus.
    *   **Hero Section:** MUST be a full-screen section (\`height: 100vh;\`) with a background image. The blog title must be overlaid, large, and centered, using \`Playfair Display\`.
    *   **Post Grid:** MUST use a dynamic grid like Masonry or an asymmetrical CSS Grid to avoid uniformity. Some images should be larger than others to create visual interest. The focus is on making the photography the hero.

---
Business Type: {{{businessType}}}
{{#if mediaLibraryUrls}}
User-provided Images:
{{#each mediaLibraryUrls}}
- {{{this}}}
{{/each}}
{{/if}}

Return the complete, pixel-perfect HTML content and provide descriptions for the layout and color scheme that reflect the chosen design persona's blueprint. Adhere strictly to the output schema.`,
});

const generateWebsiteTemplateFlow = ai.defineFlow(
  {
    name: 'generateWebsiteTemplateFlow',
    inputSchema: GenerateWebsiteTemplateInputSchema,
    outputSchema: GenerateWebsiteTemplateOutputSchema,
  },
  async input => {
    // 1. Generate the initial HTML template with image prompts
    const {output} = await prompt(input);
    if (!output) {
      throw new Error('Failed to generate website template.');
    }

    let htmlContent = output.htmlContent;
    const imagePrompts: string[] = [];
    const regex = /src="image-prompt:([^"]+)"/g;

    // 2. Extract all image prompts from the HTML
    let match;
    while ((match = regex.exec(htmlContent)) !== null) {
      imagePrompts.push(match[1]);
    }

    if (imagePrompts.length > 0) {
      // 3. Generate all images in parallel
      const imageGenerationPromises = imagePrompts.map(p =>
        ai.generate({
          model: 'googleai/gemini-2.0-flash-preview-image-generation',
          prompt: p,
          config: {
            responseModalities: ['TEXT', 'IMAGE'],
          },
        })
      );

      const imageResults = await Promise.all(imageGenerationPromises);

      const generatedImageUrls = imageResults.map(result => result.media?.url || '');

      // 4. Replace prompts with actual image data URIs
      let imageIndex = 0;
      htmlContent = htmlContent.replace(regex, () => {
        const imageUrl = generatedImageUrls[imageIndex];
        imageIndex++;
        // If image generation failed for some reason, use a placeholder
        return `src="${imageUrl || 'https://placehold.co/600x400.png'}"`;
      });
    }

    // 5. Return the final output with real images
    return {
      ...output,
      htmlContent,
    };
  }
);
